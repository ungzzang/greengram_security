<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.green.greengram.feed.FeedMapper">
    <insert id="insFeed" useGeneratedKeys="true" keyProperty="feedId">
        INSERT INTO feed
           SET writer_user_id = #{writerUserId}
             , contents = #{contents}
             , location = #{location}
    </insert>

    <!--좋아요처리를 추가했음-->
    <select id="selFeedList">
        SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm <!--삼항식 if(a is null, b, c) a가 널이면 b, 아니면 c-->
             , b.pic as writerPic
             , IF(c.feed_id IS NULL, 0, 1) as isLike <!--1이면 좋아요 누른거-->
        FROM feed a
        JOIN user b
        ON a.writer_user_id = b.user_id
        LEFT JOIN feed_like c <!--feed안에 컬럼 다 나오게 하려고(null도) LEFT JOIN-->
        ON a.feed_id = c.feed_id
        AND c.user_id = #{signedUserId}
        <if test = "profileUserId != null">
            WHERE a.writer_user_id = #{profileUserId}
        </if>
        ORDER BY a.feed_id desc
        LIMIT #{startIdx}, #{size}

    </select>


    <!--SELECT 두번용-->
    <select id="selFeedWithPicList">

            SELECT T1.*, T2.pic
            FROM (
                SELECT A.feed_id AS feedId, A.contents, A.location
                    , A.created_at AS createdAt
                    , B.user_id AS writerUserId
                    , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
                    , B.pic AS writerPic
                    , IF(C.feed_id IS NULL, 0, 1) AS isLike
            FROM feed A
            INNER JOIN user B
               ON A.writer_user_id = B.user_id
             LEFT JOIN feed_like C
               ON A.feed_id = C.feed_id
              AND C.user_id = #{signedUserId}
                    <if test=" profileUserId != null ">
                        WHERE A.writer_user_id = #{profileUserId}
                    </if>
            ORDER BY A.feed_id DESC
            LIMIT #{startIdx}, #{size} <!--피드먼저 리밋트로 가져오고 사진가져온거-->
            ) T1
            INNER JOIN feed_pic T2
               ON T1.feedId = T2.feed_id

    </select>

    <select id="selFeedWithPicAndCommentLimit4List">
        SELECT T1.*, T2.pic, T3.*
        FROM (
        SELECT A.feed_id AS feedId, A.contents, A.location
        , A.created_at AS createdAt
        , B.user_id AS writerUserId
        , IF(B.nick_name IS NULL, B.uid, B.nick_name) AS writerNm
        , B.pic AS writerPic
        , IF(C.feed_id IS NULL, 0, 1) AS isLike
        FROM feed A
        INNER JOIN user B
        ON A.writer_user_id = B.user_id
        LEFT JOIN feed_like C
        ON A.feed_id = C.feed_id
        AND C.user_id = #{signedUserId}
            <if test=" profileUserId != null ">
                WHERE A.writer_user_id = #{profileUserId}
            </if>
        ORDER BY A.feed_id DESC
        LIMIT #{startIdx}, #{size}
        ) T1
        INNER JOIN feed_pic T2
        ON T1.feedId = T2.feed_id
        LEFT JOIN (
        SELECT A.feed_id, A.feed_comment_id, A.`COMMENT`
            , C.user_id AS commentWriterUserId
            , IF(C.nick_name IS NULL, C.uid, C.nick_name) AS commentWriterNm
            , C.pic AS commentWriterPic
        FROM feed_comment A
        LEFT JOIN feed_comment B
        ON A.feed_id = B.feed_id
        AND A.feed_comment_id > B.feed_comment_id
        INNER JOIN user C
        ON A.user_id = C.user_id
        GROUP BY A.feed_id, A.feed_comment_id, A.`COMMENT`
        HAVING COUNT(A.feed_id) <![CDATA[ < ]]> 4
        ) T3
        ON T1.feedId = T3.feed_id
    </select>


    <!-- 좋아요 처리하기 전
    <select id="selFeedList">
        SELECT a.feed_id AS feedId, a.contents, a.location, a.created_at AS createdAt
             , b.user_id AS writerUserId
             , if(b.nick_name IS NULL, b.uid, b.nick_name) as writerNm
             , b.pic as writerPic
         FROM feed a
         JOIN user b
           ON a.writer_user_id = b.user_id
        ORDER BY a.feed_id DESC
        LIMIT #{startIdx}, #{size}
    </select>
    -->

    <delete id="delFeedLikeAndFeedCommentAndFeedPic">
        DELETE B, C, D
        FROM feed A
        LEFT JOIN feed_like B
        ON A.feed_id = B.feed_id
        LEFT JOIN feed_comment C
        ON A.feed_id = C.feed_id
        LEFT JOIN feed_pic D
        ON A.feed_id = D.feed_id
        WHERE A.feed_id = #{feedId}
        AND A.writer_user_id = #{signedUserId}
    </delete>

    <delete id="delFeed">
        DELETE FROM feed
        WHERE feed_id = #{feedId}
        AND writer_user_id = #{signedUserId}
    </delete>



</mapper>